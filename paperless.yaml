# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-3.4.4
apiVersion: v1
kind: Pod
metadata:
  name: paperless
  labels:
    app: paperless
  annotations:
    bind-mount-options:/home/yves/app/ppngx/export: Z

spec:
  containers:
  # in-memory data store used by millions of developers as a database, cache, streaming engine, and message broker. 
  # https://redis.io/ - 
  # [This is required for processing scheduled tasks such as email fetching, index optimization and for training the automatic document matcher.](https://docs.paperless-ngx.com/configuration/#redis-broker)
  - name: paperless-redis
    image: docker.io/library/redis:7
    ports:
    - containerPort: 2022
      hostPort: 2022
    - containerPort: 8022
      hostPort: 8022
    volumeMounts:
    - mountPath: /data
      name: paperless-redis-pvc

  # DB => use SQLite by default
  # - name: paperless-postgresql
  #   image: docker.io/library/postgres:13
  #   volumeMounts:
  #   - mountPath: /var/lib/postgresql/data
  #     name: paperless-postgresql-pvc

  # Gotenberg provides a developer-friendly API to interact with powerful tools like Chromium and LibreOffice for converting numerous document formats (HTML, Markdown, Word, Excel, etc.) into PDF files, and more!
  # https://gotenberg.dev/
  - name: paperless-gotenberg
    image: docker.io/gotenberg/gotenberg:7.8
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command: ['gotenberg', '--chromium-disable-javascript=true', '--chromium-allow-list=file:///tmp/.*']
  
  # toolkit detects and extracts metadata and text from over a thousand different file types (such as PPT, XLS, and PDF).
  # https://tika.apache.org/
  - name: paperless-tika
    image: docker.io/apache/tika:latest

  # 
  # - name: paperless-sftpgo
  #   image: ghcr.io/drakkan/sftpgo:v2.5.4
  #   volumeMounts:
  #   - mountPath: /var/lib/sftpgo
  #     name: paperless-sftpgo-pvc
  #   - mountPath: /opt/paperless/consume
  #     name: paperless-consume-pvc

  # The application
  - name: paperless-webserver
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    args:
    - /usr/local/bin/paperless_cmd.sh
    ports:
    - containerPort: 8000
      hostPort: 8000
    
    env:
    - name: PAPERLESS_DBENGINE
      value: sqlite
    - name: PAPERLESS_REDIS
      value: redis://localhost:6379
    - name: PAPERLESS_TIKA_ENABLED
      value: 1
    - name: PAPERLESS_TIKA_ENDPOINT
      value: http://localhost:9998
    - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
      value: http://localhost:3000
    # The UID and GID of the user used to run paperless in the container. Set this
    # to your UID and GID on the host so that you have write access to the
    # consumption directory.
    # using root uid=0 is the correct thing to do with postman (since it is already rootless)
    - name: USERMAP_UID
      value: 0
    - name: USERMAP_GID
      value: 0
    # The default language to use for OCR. Set this to the language most of your
    # documents are written in.
    - name: PAPERLESS_OCR_LANGUAGE
      value: fra

    volumeMounts:
    - mountPath: /usr/src/paperless/export
      name: home-yves-app-ppngx-export-host-0
    - mountPath: /usr/src/paperless/consume
      name: paperless-consume
    - mountPath: /usr/src/paperless/data
      name: paperless-data
    - mountPath: /usr/src/paperless/media
      name: paperless-media


  volumes:
  # redisdata
  - name: paperless-redis-pvc
    persistentVolumeClaim:
      claimName: paperless-redis
  # Paperless
  - name: paperless-data
    hostPath:
      path: /home/yves/Documents/paperless-ngx/data
      type: DirectoryOrCreate
  - name: paperless-media
    hostPath:
      path: /home/yves/Documents/paperless-ngx/media
      type: DirectoryOrCreate
  - name: home-yves-app-ppngx-export-host-0
    hostPath:
      path: /home/yves/Documents/paperless-ngx/export
      type: DirectoryOrCreate
  - name: paperless-consume
    hostPath:
      path: /home/yves/Documents/paperless-ngx/consume
      type: DirectoryOrCreate
  # - name: paperless-sftpgo-pvc
  #   persistentVolumeClaim:
  #     claimName: paperless-sftpgo

  # - name: paperless-postgresql-pvc
  #   persistentVolumeClaim:
  #     claimName: paperless-postgresql


